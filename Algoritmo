#Criado por: Mikelly Correia
# Trabalho final da disciplina de Estruturas de Dados e Algoritmo

Classe Pilha_Encad:

  Função CriarElemento():
    valor = 0
    prox = nulo
  topo = nulo

  Função Empilhar(chave, topo)
    novo = Elemento()
    novo.valor = chave
    novo.prox = topo
    topo = novo
    return topo

  Função Desempilhar(topo)
    if (topo != none):
      print(topo.valor)
      aux = topo
      topo = topo.prox
      dell aux
    else:
      print("Pilha vazia")

Classe No:

Função NovoNo():
  valor = chave
  esq = nulo
  dir = nulo

Classe ArvoreBinaria:

  Função CriarNo(chave):
    no = No(chave)
    raiz = no

#Algoritmo de Busca Binária

  Pont = raiz
  Função Busca(Pont, chave, F):
    if (Pont == nulo):
        F=0
    else:
        if (chave == Pont.valor):
            F=1
        else:
            if (chave < Pont.valor):
                if (Pont.esq == nulo):
                    F=2
                else:
                    Pont = Pont.esq
                    Busca(Pont, chave, F)
            else:
                if (Pont.dir == nulo):
                    F=3
                else:
                    Pont = Pont.dir
                    Busca (Pont, chave, F)
    return Pont, F

#Algoritmo de Inclusão

  Função Inserir(Pont, chave, F):
    Pont = raiz
    Busca (Pont, chave, F)
    if (F == 1):
        print ("Chave já existe!")
    else:
        novo = NO ()
        novo.valor = chave
        novo.esq = nulo
        novo.dir = nulo
        if (F == 0):
            raiz = novo
        else:

          if (F ==2):
                Pont.esq = novo
            else:
                Pont.dir = novo 

  Função Excluir(chave):
    Busca(chave, raiz, Pont, pai, F)
    if (F == 1):
      if (Pont.esq == nulo):
          if Pont == raiz:
              raiz= raiz.dir
          else:
              if (Pont == pai.esq):
                  pai.esq = Pont.dir
              else:
                  pai.dir = Pont.dir
      else:
          if (Pont.dir == nulo):
              if (Pont == raiz):
                  raiz = raiz.esq 
              else:
                  if (Pont == pai.esq):
                      pai.esq = Pont.esq
                  else:
                      pai.dir = Pont.esq
          else:
              Pont_aux = Pont.dir
              Pai_aux = Pont

              while (Pont_aux.esq != nulo):
                  Pai = Pont_aux
                  Pont_aux = Pont
              if (Pai_aux != Pont):
                  Pai_aux.esq = Pont_aux.dir
                  Pont_aux.dir = Pont.dir
              Pont_aux = Pont.esq
              if (Pont == raiz):
                  raiz = Pont_aux
              else:
                  if (pai.esq == Pont):
                      pai.esq = Pont_aux
                  else:
                      pai.dir = Pont_aux
    dell Pont

    
